<?php

namespace App\Notifications;

use Illuminate\Bus\Queueable;
use Illuminate\Notifications\Notification;
use Illuminate\Notifications\Messages\MailMessage;
use App\Models\Mission;
use Illuminate\Contracts\Queue\ShouldQueue;

class MissionOutdated extends Notification implements ShouldQueue
{
    use Queueable;

    /**
     * The order instance.
     *
     * @var Mission
     */
    public $mission;

    /**
     * Create a new notification instance.
     *
     * @return void
     */
    public function __construct(Mission $mission)
    {
        $this->mission = $mission;
    }

    public function viaQueues()
    {
        return [
            'mail' => 'emails',
        ];
    }

    /**
     * Get the notification's delivery channels.
     *
     * @param  mixed  $notifiable
     * @return array
     */
    public function via($notifiable)
    {
        return ['mail'];
    }

    /**
     * Get the mail representation of the notification.
     *
     * @param  mixed  $notifiable
     * @return \Illuminate\Notifications\Messages\MailMessage
     */
    public function toMail($notifiable)
    {
        return (new MailMessage)
            ->subject("Votre mission Â«Â " . $this->mission->name . "Â Â» a-t-elle pris finÂ ?")
            ->greeting('Bonjour ' . $notifiable->first_name . ' ðŸ‘‹,')
            ->line("L'une de vos missions est arrivÃ©e Ã  Ã©chÃ©anceÂ : la date de fin que vous avez renseignÃ©e est dÃ©passÃ©e. Deux solutions s'offrent Ã  vousÂ :")
            ->line("- Si votre mission se poursuit, il suffit de mettre Ã  jour la date de fin")
            ->line("- Si votre mission a pris fin, il faut la passer au statut Â«Â TerminÃ©Â Â».")
            ->action('Je mets Ã  jour ma mission', url(config('app.front_url'). '/admin/missions/' . $this->mission->id))
            ->line("En cas de besoin, vous pouvez rÃ©pondre Ã  ce mail pour Ã©changer directement avec le support utilisateursÂ !");
    }

    /**
     * Get the array representation of the notification.
     *
     * @param  mixed  $notifiable
     * @return array
     */
    public function toArray($notifiable)
    {
        return [
            //
        ];
    }
}
